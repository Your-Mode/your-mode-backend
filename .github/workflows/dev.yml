name: Build and Deploy on Develop

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. GitHub 레포지토리 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. application-dev.properties 생성
      - name: Create application-dev.properties
        run: |
          cd src/main/resources
          echo "${{ secrets.APPLICATION_DEV }}" > application-dev.properties

      # 4. gradlew 실행 권한 부여
      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      # 5. Gradle 빌드 (테스트 제외, dev 프로필로)
      - name: Build with Gradle using 'dev' profile
        run: ./gradlew build -x test -Dspring.profiles.active=dev

      # 6. 빌드 결과물 확인
      - name: List build artifacts
        run: ls -al build/libs

      # 7. AWS 인증 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 8. 배포용 디렉토리 준비
      - name: Prepare deployment package
        run: |
          mkdir -p deploy/scripts
          cp build/libs/*.jar deploy/
          cp appspec.yml deploy/
          cp -r scripts/* deploy/scripts/

      # 9. 배포용 zip 압축 생성
      - name: Create deployment zip file
        run: zip -r your-mode-deploy.zip . -i "deploy/*"

      # 10. zip 파일을 S3에 업로드
      - name: Upload deployment zip to S3
        run: aws s3 cp your-mode-deploy.zip s3://${{ secrets.S3_BUCKET }}/${{ secrets.S3_KEY }} --sse AES256

      # 11. CodeDeploy를 트리거 (선택)
      - name: Trigger CodeDeploy deployment
        run: |
          aws deploy create-deployment \
            --application-name ${{ secrets.CODEDEPLOY_APP_NAME }} \
            --deployment-group-name ${{ secrets.CODEDEPLOY_DEPLOYMENT_GROUP }} \
            --s3-location bucket=${{ secrets.S3_BUCKET }},key=${{ secrets.S3_KEY }},bundleType=zip \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --file-exists-behavior OVERWRITE
